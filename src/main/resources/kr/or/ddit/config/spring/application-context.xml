<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<!--
		 kr.or.ddit 패키지 하위의 클래스 중 @controller 어노테이션이 붙은 클래스를 스캔하여 스프링 빈으로 생성 
		(자식컨테이너에서 사용할 controller 스캔)
	-->
	<context:component-scan base-package="kr.or.ddit" use-default-filters="false">
		<!-- 추가 : include -->
		<!-- 제외 : exclude -->
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>
	
	<bean id="progileImgView" class="kr.or.ddit.mvc.view.ProgileImgView"></bean>
	<bean id="downloadImgView" class="kr.or.ddit.mvc.view.fileDownloadview"></bean>
	<bean id="excelView" class="kr.or.ddit.mvc.view.ExcelDownloadView"></bean>
	
	<bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"></bean>
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order" value="0"></property>
	</bean>
	
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 
			prefix : 접두어, suffix : 접미어 
			Controller가 리턴하는 문자열에 prefix, suffix를 적용하여 해당 경로의 파일로 응답을 생성
			LoginController.getView() 의 리턴 값은 "login/view"
			<property name="prefix" value="/WEB-INF/views/"/>와
			<property name="suffix" value=".jsp"/>로
			"/WEB-INF/views/" + "login/view" + ".jsp"
			=> "/WEB-INF/views/login/view.jsp
		-->
		<property name="order" value="1"></property>
		<property name="prefix" value="/WEB-INF/views/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
	
	
	<!-- 
		@controller, @RequestMapping, 
		HandlerMapping, HandlerAdapter, 
		formating conversion service validation등 
		spring mvc 패턴에 필요한 어노테이션 엘레멘트 처리 자동으로 해줌
	 -->
	<mvc:annotation-driven/>
	
	
	<!-- spring container가 처리하지 못하는 것을 톰캣의 디폴트 서블릿에게 위임 -->
	<mvc:default-servlet-handler/>
	
	<!-- 파일 업로드 처리를 위한 multipartResolver 설정 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"></bean>
	

	<!-- 
		정적자원 매핑 처리
		1. url 단축을 목적
		2. WEB_INF : 외부에서 접근 불가능한 공간에 저장된 자원들 접근 매핑
	-->
	
	<!-- localhost/resources/style.css -->
	<mvc:resources mapping="/resources/**" location="/WEB-INF/views/error/" />
	

		
	
</beans>
